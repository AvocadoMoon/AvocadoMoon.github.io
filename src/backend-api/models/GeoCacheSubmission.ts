/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GeoCacheSubmission
 */
export interface GeoCacheSubmission {
    /**
     * 
     * @type {string}
     * @memberof GeoCacheSubmission
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GeoCacheSubmission
     */
    note: string;
    /**
     * 
     * @type {string}
     * @memberof GeoCacheSubmission
     */
    secret?: string;
    /**
     * 
     * @type {string}
     * @memberof GeoCacheSubmission
     */
    longitude?: string;
    /**
     * 
     * @type {string}
     * @memberof GeoCacheSubmission
     */
    latitude?: string;
    /**
     * 
     * @type {string}
     * @memberof GeoCacheSubmission
     */
    date?: string;
}

/**
 * Check if a given object implements the GeoCacheSubmission interface.
 */
export function instanceOfGeoCacheSubmission(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "note" in value;

    return isInstance;
}

export function GeoCacheSubmissionFromJSON(json: any): GeoCacheSubmission {
    return GeoCacheSubmissionFromJSONTyped(json, false);
}

export function GeoCacheSubmissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeoCacheSubmission {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'note': json['note'],
        'secret': !exists(json, 'secret') ? undefined : json['secret'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'date': !exists(json, 'date') ? undefined : json['date'],
    };
}

export function GeoCacheSubmissionToJSON(value?: GeoCacheSubmission | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'note': value.note,
        'secret': value.secret,
        'longitude': value.longitude,
        'latitude': value.latitude,
        'date': value.date,
    };
}

